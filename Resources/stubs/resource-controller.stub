<?php

namespace Modules\{{ Module }}\Http\Controllers;

use Illuminate\View\View;
use Illuminate\Routing\Controller;
use Modules\{{ Module }}\Entities\{{ Module }};
use Illuminate\Http\RedirectResponse;
use Illuminate\Support\Facades\Cache;

class {{ Module }}Controller extends Controller
{
    /**
     * Display a listing of the resource.
     */
    public function index(): View
    {
        ${{ ModulePluralSnake }} = Cache::remember('{{ ModulePluralSnake }}', 86400, function () {
            return {{ Module }}::all();
        });

        return view('vendor.kokst.core.resource.index', [
            'resource' => '{{ ModuleDash }}',
            'collection' => ${{ ModulePluralSnake }},
            'header' => __('{{ ModuleLower }}::index.title'),
            'basic' => {{ Basic }},
        ]);
    }

    /**
     * Show the form for creating a new resource.
     */
    public function create(): View
    {
        return view('vendor.kokst.core.resource.form', [
            'resource' => '{{ ModuleDash }}',
            'type' => 'create',
            'namespace' => '{{ ModuleDash }}',
            'fields' => [
                'title' => ['type' => 'text', 'required' => true],
            ],
            'header' => __('{{ ModuleLower }}::create.title'),
        ]);
    }

    /**
     * Store a newly created resource in storage.
     */
    public function store(): RedirectResponse
    {
        {{ Module }}::create(
            request()->validate([
                'title' => ['required', 'min:3']
            ])
        );

        return redirect('/{{ ModuleDash }}');
    }

    /**
     * Display the specified resource.
     */
    public function show({{ Module }} ${{ ModuleSnake }}): View
    {
        return view('{{ ModuleLower }}::show', compact('{{ ModuleSnake }}'));
    }

    /**
     * Show the form for editing the specified resource.
     */
    public function edit({{ Module }} ${{ ModuleSnake }}): View
    {
        return view('vendor.kokst.core.resource.form', [
            'resource' => '{{ ModuleDash }}',
            'type' => 'edit',
            'model' => ${{ ModuleSnake }},
            'namespace' => '{{ ModuleDash }}',
            'fields' => [
                'title' => ['type' => 'text', 'required' => true],
            ],
            'header' => __('{{ ModuleLower }}::edit.title'),
        ]);
    }

    /**
     * Update the specified resource in storage.
     */
    public function update({{ Module }} ${{ ModuleSnake }}): RedirectResponse
    {
        request()->validate([
            'title' => ['required', 'min:3']
        ]);

        ${{ ModuleSnake }}->update(request([
            'title'
        ]));

        return redirect('/{{ ModuleDash }}/' . ${{ ModuleSnake }}->id);
    }

    /**
     * Remove the specified resource from storage.
     */
    public function destroy({{ Module }} ${{ ModuleSnake }}): RedirectResponse
    {
        ${{ ModuleSnake }}->delete();

        return redirect('/{{ ModuleDash }}');
    }
}
